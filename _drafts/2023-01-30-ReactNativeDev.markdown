Recently, I had to start working on a project based on the React Native framework. Being an Android developer for quite some time and having worked on iOS too, I kept wondering why not native. But since the whole team consisted of web developers, and they find it easy to develop using a web-like framework, they insisted on using React Native. Me being just a bit familiar with basic vanilla javascript and having no idea about React or React Native, I hesitated at first, but then I decided to take it as an opportunity and I dived into it. It took almost a week for me to get the initial codebase running without the server disconnecting or failing to bundle and install. I was given the mostly Android-native side of sensor data reading and bridging with React Native and emitting events. Once done, now the challenge was to use different packages for getting foreground service, location provider, permissions, alarms, and workmanager. When I was going through these packages, I saw issues like no support for the latest Android versions, a lot of open issues that were not addressed, a few of them implemented only for iOS, etc.
Then I went the native route to almost implement everything, writing business logic and building a bridge with React Native UI. I also got to learn the react way of development and more concepts like promises, async/await, arrow functions, and hooks. That even inspired me to get back to learning Compose. As a developer, switching between frameworks or programming languages is not that hard if you understand the basics. And learning multiple technologies at the time when AI is almost taking over our jobsI had once tried Node.js; now I may explore more JS-based frameworks, but I will always be a native mobile developer, Android lover:)
